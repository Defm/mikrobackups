

{

:global targetfile "flash/backup.rsc"
:global importlog "flash/import.log"
:global debuglog "flash/perfectrestore.log"

/file remove [find name ~"$importlog"]
/file remove [find name ~"$debuglog"]

# Wait for interfaces to initialize
:delay 15s

# Beep Functions
 :local doStartBeep [:parse ":beep frequency=1000 length=300ms;:delay 150ms;:beep frequency=1500 length=300ms;"];
 :local doFinishBeep [:parse ":beep frequency=1000 length=.6;:delay .5s;:beep frequency=1600 length=.6;:delay .5s;:beep frequency=2100 length=.3;:delay .3s;:beep frequency=2500 length=.3;:delay .3s;:beep frequency=2400 length=1;
"];

# Setup temporary logging to disk
/system logging action add disk-file-count=1 disk-file-name=$debuglog disk-lines-per-file=4096 name=perfectrestore target=disk
/system logging add action=perfectrestore topics=system,info
/system logging add action=perfectrestore topics=script,info
/system logging add action=perfectrestore topics=warning
/system logging add action=perfectrestore topics=error
/system logging add action=perfectrestore topics=critical
/system logging add action=perfectrestore topics=debug,!packet

# Play Audible Start Sequence
$doStartBeep

# Import the rsc file
:log info "BEGIN IMPORT file=$targetfile -----------------------------------------------------------------------------"

:do {

  #IPSEC certs have to be imported before the other config is restored
  #Its should be kept on flash memory to get alive after /system reset-configuration

  /certificate import file-name=flash/ca@CHR.p12 passphrase=1234567890
  /certificate set [find common-name=ca@CHR] name=ca@CHR
  /certificate import file-name=flash/mikrouter@CHR.p12 passphrase=1234567890
  /certificate set [find common-name=mikrouter@CHR] name=mikrouter@CHR

  :local write2file ":import file-name=$targetfile verbose=yes"

  :execute script=$write2file file=$importlog

  :log info "END IMPORT file=$targetfile  -----------------------------------------------------------------------------"

} on-error={

:log error "ERROR IMPORT file=$targetfile  -----------------------------------------------------------------------------"

}

# Post import delay
:delay 20s

# Play Audible Finish Sequence
$doFinishBeep

# Teardown temporary logging to disk
/system logging remove [/system logging find where action=perfectrestore]
/system logging action remove [/system logging action find where name=perfectrestore]

/system script environment remove [find name="targetfile"]
/system script environment remove [find name="importlog"]
/system script environment remove [find name="debuglog"]

#new startup scripts maybe restored so...
/system reboot

}

