:local sysname [/system identity get name];
:local scriptname "doIPSECPunch";
:global globalScriptBeforeRun;
$globalScriptBeforeRun $scriptname;

:global globalNoteMe;
:local itsOk true;

:local state "";
:local punched "";


/ip ipsec policy {
  :foreach vpnEndpoint in=[find (!disabled and !template)] do={

    :local ph2state [get value-name=ph2-state $vpnEndpoint]
    :local isTunnel [get value-name=tunnel $vpnEndpoint]
    :local dstIp;

    :if ($isTunnel) do={
      :set dstIp [get value-name=sa-dst-address $vpnEndpoint]
    } else {
      :set dstIp [get value-name=dst-address $vpnEndpoint]
    }

    :if (($itsOk) and ($ph2state != "established")) do={

      /ip ipsec active-peers {
        :foreach actPeer in=[find remote-address=$dstIp] do={

          :local peerId [get $actPeer id];
          :local peer "";

          :if ([:typeof $peerId] != "nil") do={
            :set peer "$peerId"
          } else {
            :set peer "$dstIp"
          }

          :do {

            :set state "Non-established IPSEC policy found for $peer endpoint. Going flush.."
            $globalNoteMe value=$state;

            [remove $actPeer];

            :set state ("IPSEC tunnel got a punch after down for $dstIp ");
            $globalNoteMe value=$state;

            #waiting for tunnel to come up, because Telegram notes goes through tunnel
            :delay 10;

            :set punched ($punched . "$peer");
            
          } on-error= {

            :set state "Error When $state"
            $globalNoteMe value=$state;

            :set itsOk false;
            
          }
        }
      }
    }
  }
}

:local inf ""

:if (($itsOk) and ($punched = "")) do={
  :set inf "$scriptname on $sysname: IPSEC tunnels are fine"
}

:if (($itsOk) and ($punched != "")) do={
  :set inf "$scriptname on $sysname: IPSEC tunnels refreshed for $punched"

  :global globalTgMessage;
  $globalTgMessage value=$inf;
}

:if (!$itsOk) do={
  :set inf "$scriptname on $sysname: $state"  
  
  :global globalTgMessage;
  $globalTgMessage value=$inf;

}

$globalNoteMe value=$inf


