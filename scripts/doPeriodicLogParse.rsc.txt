
:global globalScriptBeforeRun;
#$globalScriptBeforeRun "doPeriodicLogParse";

:local sysname ("%C2%A9%EF%B8%8F #" . [/system identity get name]);
:local scriptname "doPeriodicLogParse";

# Script Name: Log-Parser-Script
#
# This is an EXAMPLE script.  Modify it to your requirements.
#
# This script will work with all v3.x and v4.x
# If your version >= v3.23, you can use the ~ operator to match against
# regular expressions.

# Get log entry data from global variable and store it locally
:global globalParseVar;

:global globalTgMessage;
:global globalNoteMe;

:local logTime ($globalParseVar->0)
:local logTopics [:tostr ($globalParseVar->1)]
:local logMessage [:tostr ($globalParseVar->2)]

:set $globalParseVar ""

:local ruleop
:local loguser
:local logsettings
:local findindex
:local tmpstring

# Uncomment to view the log entry's details
:put ("Log Time: " . $logTime)
:put ("Log Topics: " . $logTopics)
:put ("Log Message: " . $logMessage)

# Check for login failure
:if ($logMessage~"login failure") do={

   :local inf "$scriptname on $sysname: A login failure has occured: $logMessage. Take some action";

   $globalNoteMe value=$inf;
   $globalTgMessage value=$inf;

}
# End check for login failure

# Check for logged in users
:if ($logMessage~"logged in") do={
   
   :local inf "$scriptname on $sysname: A user has logged in: $logMessage";

   $globalNoteMe value=$inf;
   $globalTgMessage value=$inf;

}
# End check for logged in users

# Check for configuration changes: added, changed, or removed
:if ([:tostr $logTopics] = "system;info") do={
   :set ruleop ""
   :if ([:len [:find [:tostr $logMessage] "changed "]] > 0) do={ :set ruleop "changed" }
   :if ([:len [:find [:tostr $logMessage] "added "]] > 0) do={ :set ruleop "added" }
   :if ([:len [:find [:tostr $logMessage] "removed "]] > 0) do={ :set ruleop "removed" }

   :if ([:len $ruleop] > 0) do={
      :set tmpstring $logMessage
      :set findindex [:find [:tostr $tmpstring] [:tostr $ruleop]]
      :set tmpstring ([:pick [:tostr $tmpstring] 0 $findindex] . \
                               [:pick [:tostr $tmpstring] ($findindex + [:len [:tostr $ruleop]]) [:len [:tostr $tmpstring]]])
      :set findindex [:find [:tostr $tmpstring] " by "]
      :set loguser ([:pick [:tostr $tmpstring] ($findindex + 4) [:len [:tostr $tmpstring]]])
      :set logsettings [:pick [:tostr $tmpstring] 0 $findindex]

      :put ($loguser . " " . $ruleop . " " . $logsettings . " configuration.  We should take a backup now.")

      :local inf "$scriptname on $sysname: $loguser $ruleop $logsettings configuration.  We should take a backup now.";

      $globalNoteMe value=$inf;
      $globalTgMessage value=$inf;

   }
}

# End check for configuration changes

}

